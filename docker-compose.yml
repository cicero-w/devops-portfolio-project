networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  nginx_logs:
    driver: local

services:
  backend:
    build:
      context: ./app/backend
      dockerfile: Dockerfile
    container_name: portfolio-backend
    restart: unless-stopped
    expose:
      - "8000"
    environment:
      - NODE_ENV=production
      - API_PORT=8000
    networks:
      app-network:
        ipv4_address: 172.20.0.10
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 256M
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./app/frontend
      dockerfile: Dockerfile
    container_name: portfolio-frontend
    restart: unless-stopped
    expose:
      - "3000"
    networks:
      app-network:
        ipv4_address: 172.20.0.11
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    depends_on:
       - backend 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:1.25-alpine
    container_name: portfolio-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
      # - ./certs:/etc/nginx/certs:ro
    networks:
      app-network:
        ipv4_address: 172.20.0.12
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s