name: CI/CD Pipeline

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/devops-portfolio-backend
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/devops-portfolio-frontend

jobs:
  lint-dockerfiles:
    name: Lint Dockerfiles
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Lint Backend Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: app/backend/Dockerfile
          ignore: DL3008,DL3009
          failure-threshold: warning
      - name: Lint Frontend Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: app/frontend/Dockerfile
          ignore: DL3008,DL3009
          failure-threshold: warning

  build-and-test:
    name: Build and Test Images
    runs-on: ubuntu-latest
    needs: lint-dockerfiles
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract Backend metadata
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BACKEND_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=${{ github.ref_name }}-
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
      
      - name: Build Backend image
        uses: docker/build-push-action@v5
        with:
          context: app/backend
          push: false
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Extract Frontend metadata  
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.FRONTEND_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=${{ github.ref_name }}-
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
      
      - name: Build Frontend image
        uses: docker/build-push-action@v5
        with:
          context: app/frontend
          push: false
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Scan Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.BACKEND_IMAGE }}:${{ github.ref_name }}-${{ github.sha }}
          format: sarif
          output: backend-trivy-results.sarif
          severity: CRITICAL,HIGH,MEDIUM
      - name: Upload Backend Trivy
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: backend-trivy-results.sarif
          category: backend-container
      - name: Scan Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.FRONTEND_IMAGE }}:${{ github.ref_name }}-${{ github.sha }}
          format: sarif
          output: frontend-trivy-results.sarif
          severity: CRITICAL,HIGH,MEDIUM
      - name: Upload Frontend Trivy
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: frontend-trivy-results.sarif
          category: frontend-container

  publish:
    name: Publish Images to Registry
    runs-on: ubuntu-latest
    needs: [build-and-test, security-scan]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract Backend metadata
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BACKEND_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=${{ github.ref_name }}-
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
      
      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: app/backend
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          platforms: linux/amd64,linux/arm64
      
      - name: Extract Frontend metadata
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.FRONTEND_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=${{ github.ref_name }}-
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
      
      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: app/frontend
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          platforms: linux/amd64,linux/arm64